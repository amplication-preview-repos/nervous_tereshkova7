/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AppointmentCreateNestedManyWithoutAgentsInput } from "./AppointmentCreateNestedManyWithoutAgentsInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { AssignmentCreateNestedManyWithoutAgentsInput } from "./AssignmentCreateNestedManyWithoutAgentsInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { UserCreateNestedManyWithoutAgentsInput } from "./UserCreateNestedManyWithoutAgentsInput";

@InputType()
class AgentCreateInput {
  @ApiProperty({
    required: false,
    type: () => AppointmentCreateNestedManyWithoutAgentsInput,
  })
  @ValidateNested()
  @Type(() => AppointmentCreateNestedManyWithoutAgentsInput)
  @IsOptional()
  @Field(() => AppointmentCreateNestedManyWithoutAgentsInput, {
    nullable: true,
  })
  appointments?: AppointmentCreateNestedManyWithoutAgentsInput;

  @ApiProperty({
    required: false,
    type: () => AssignmentCreateNestedManyWithoutAgentsInput,
  })
  @ValidateNested()
  @Type(() => AssignmentCreateNestedManyWithoutAgentsInput)
  @IsOptional()
  @Field(() => AssignmentCreateNestedManyWithoutAgentsInput, {
    nullable: true,
  })
  assignments?: AssignmentCreateNestedManyWithoutAgentsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutAgentsInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutAgentsInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutAgentsInput, {
    nullable: true,
  })
  users?: UserCreateNestedManyWithoutAgentsInput;
}

export { AgentCreateInput as AgentCreateInput };
